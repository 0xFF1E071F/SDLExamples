;--- include file created by h2incx v0.99.20 (copyright 2005-2009 japheth)
;--- source file: C:\Users\debugg\My Projects\Librerias\SDL2-devel-2.0.12-VC\include\SDL_pixels.h, last modified: 3/11/2020 3:39
;--- cmdline used for creation:  SDL_pixels.h

ifndef SDL_pixels_h_
SDL_pixels_h_	EQU	<>
	include SDL_endian.inc

SDL_ALPHA_OPAQUE	EQU	255
SDL_ALPHA_TRANSPARENT	EQU	0
SDL_PixelType typedef DWORD
SDL_PIXELTYPE_UNKNOWN = 0
SDL_PIXELTYPE_INDEX1 = 1
SDL_PIXELTYPE_INDEX4 = 2
SDL_PIXELTYPE_INDEX8 = 3
SDL_PIXELTYPE_PACKED8 = 4
SDL_PIXELTYPE_PACKED16 = 5
SDL_PIXELTYPE_PACKED32 = 6
SDL_PIXELTYPE_ARRAYU8 = 7
SDL_PIXELTYPE_ARRAYU16 = 8
SDL_PIXELTYPE_ARRAYU32 = 9
SDL_PIXELTYPE_ARRAYF16 = 10
SDL_PIXELTYPE_ARRAYF32 = 11

SDL_BitmapOrder typedef DWORD
SDL_BITMAPORDER_NONE = 0
SDL_BITMAPORDER_4321 = 1
SDL_BITMAPORDER_1234 = 2

SDL_PackedOrder typedef DWORD
SDL_PACKEDORDER_NONE = 0
SDL_PACKEDORDER_XRGB = 1
SDL_PACKEDORDER_RGBX = 2
SDL_PACKEDORDER_ARGB = 3
SDL_PACKEDORDER_RGBA = 4
SDL_PACKEDORDER_XBGR = 5
SDL_PACKEDORDER_BGRX = 6
SDL_PACKEDORDER_ABGR = 7
SDL_PACKEDORDER_BGRA = 8

SDL_ArrayOrder typedef DWORD
SDL_ARRAYORDER_NONE = 0
SDL_ARRAYORDER_RGB = 1
SDL_ARRAYORDER_RGBA = 2
SDL_ARRAYORDER_ARGB = 3
SDL_ARRAYORDER_BGR = 4
SDL_ARRAYORDER_BGRA = 5
SDL_ARRAYORDER_ABGR = 6

SDL_PackedLayout typedef DWORD
SDL_PACKEDLAYOUT_NONE = 0
SDL_PACKEDLAYOUT_332 = 1
SDL_PACKEDLAYOUT_4444 = 2
SDL_PACKEDLAYOUT_1555 = 3
SDL_PACKEDLAYOUT_5551 = 4
SDL_PACKEDLAYOUT_565 = 5
SDL_PACKEDLAYOUT_8888 = 6
SDL_PACKEDLAYOUT_2101010 = 7
SDL_PACKEDLAYOUT_1010102 = 8

SDL_DEFINE_PIXELFOURCC macro A,B,C,D
	exitm <SDL_FOURCC ( A , B , C , D ) >
	endm
SDL_DEFINE_PIXELFORMAT macro type,order,layout,bits,bytes
	exitm <( ( 1  shl  28 )  or  ( ( type )  shl  24 )  or  ( ( order )  shl  20 )  or  ( ( layout )  shl  16 )  or  ( ( bits )  shl  8 )  or  ( ( bytes )  shl  0 ) ) >
	endm
SDL_PIXELFLAG macro X
	exitm <( ( ( X )  shr  28 )  and  0Fh ) >
	endm
SDL_PIXELTYPE macro X
	exitm <( ( ( X )  shr  24 )  and  0Fh ) >
	endm
SDL_PIXELORDER macro X
	exitm <( ( ( X )  shr  20 )  and  0Fh ) >
	endm
SDL_PIXELLAYOUT macro X
	exitm <( ( ( X )  shr  16 )  and  0Fh ) >
	endm
SDL_BITSPERPIXEL macro X
	exitm <( ( ( X )  shr  8 )  and  0FFh ) >
	endm
SDL_BYTESPERPIXEL macro X
	exitm <( SDL_ISPIXELFORMAT_FOURCC ( X ) ? ( ( ( ( X ) == SDL_PIXELFORMAT_YUY2 ) || ( ( X ) == SDL_PIXELFORMAT_UYVY ) || ( ( X ) == SDL_PIXELFORMAT_YVYU ) ) ? 2 : 1 ) : ( ( ( X )  shr  0 )  and  0FFh ) ) >
	endm
SDL_ISPIXELFORMAT_INDEXED macro format
	exitm <( ! SDL_ISPIXELFORMAT_FOURCC ( format ) && ( ( SDL_PIXELTYPE ( format ) == SDL_PIXELTYPE_INDEX1 ) || ( SDL_PIXELTYPE ( format ) == SDL_PIXELTYPE_INDEX4 ) || ( SDL_PIXELTYPE ( format ) == SDL_PIXELTYPE_INDEX8 ) ) ) >
	endm
SDL_ISPIXELFORMAT_PACKED macro format
	exitm <( ! SDL_ISPIXELFORMAT_FOURCC ( format ) && ( ( SDL_PIXELTYPE ( format ) == SDL_PIXELTYPE_PACKED8 ) || ( SDL_PIXELTYPE ( format ) == SDL_PIXELTYPE_PACKED16 ) || ( SDL_PIXELTYPE ( format ) == SDL_PIXELTYPE_PACKED32 ) ) ) >
	endm
SDL_ISPIXELFORMAT_ARRAY macro format
	exitm <( ! SDL_ISPIXELFORMAT_FOURCC ( format ) && ( ( SDL_PIXELTYPE ( format ) == SDL_PIXELTYPE_ARRAYU8 ) || ( SDL_PIXELTYPE ( format ) == SDL_PIXELTYPE_ARRAYU16 ) || ( SDL_PIXELTYPE ( format ) == SDL_PIXELTYPE_ARRAYU32 ) || ( SDL_PIXELTYPE ( format ) == SDL_PIXELTYPE_ARRAYF16 ) || ( SDL_PIXELTYPE ( format ) == SDL_PIXELTYPE_ARRAYF32 ) ) ) >
	endm
SDL_ISPIXELFORMAT_ALPHA macro format
	exitm <( ( SDL_ISPIXELFORMAT_PACKED ( format ) && ( ( SDL_PIXELORDER ( format ) == SDL_PACKEDORDER_ARGB ) || ( SDL_PIXELORDER ( format ) == SDL_PACKEDORDER_RGBA ) || ( SDL_PIXELORDER ( format ) == SDL_PACKEDORDER_ABGR ) || ( SDL_PIXELORDER ( format ) == SDL_PACKEDORDER_BGRA ) ) ) || ( SDL_ISPIXELFORMAT_ARRAY ( format ) && ( ( SDL_PIXELORDER ( format ) == SDL_ARRAYORDER_ARGB ) || ( SDL_PIXELORDER ( format ) == SDL_ARRAYORDER_RGBA ) || ( SDL_PIXELORDER ( format ) == SDL_ARRAYORDER_ABGR ) || ( SDL_PIXELORDER ( format ) == SDL_ARRAYORDER_BGRA ) ) ) ) >
	endm
SDL_ISPIXELFORMAT_FOURCC macro format
	exitm <( ( format ) && ( SDL_PIXELFLAG ( format ) != 1 ) ) >
	endm
SDL_PixelFormatEnum typedef DWORD
SDL_PIXELFORMAT_UNKNOWN = 0
SDL_PIXELFORMAT_INDEX1LSB = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_INDEX1 , SDL_BITMAPORDER_4321 , 0 , 1 , 0)
SDL_PIXELFORMAT_INDEX1MSB = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_INDEX1 , SDL_BITMAPORDER_1234 , 0 , 1 , 0)
SDL_PIXELFORMAT_INDEX4LSB = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_INDEX4 , SDL_BITMAPORDER_4321 , 0 , 4 , 0)
SDL_PIXELFORMAT_INDEX4MSB = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_INDEX4 , SDL_BITMAPORDER_1234 , 0 , 4 , 0)
SDL_PIXELFORMAT_INDEX8 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_INDEX8 , 0 , 0 , 8 , 1)
SDL_PIXELFORMAT_RGB332 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED8 , SDL_PACKEDORDER_XRGB , SDL_PACKEDLAYOUT_332 , 8 , 1)
SDL_PIXELFORMAT_RGB444 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED16 , SDL_PACKEDORDER_XRGB , SDL_PACKEDLAYOUT_4444 , 12 , 2)
SDL_PIXELFORMAT_BGR444 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED16 , SDL_PACKEDORDER_XBGR , SDL_PACKEDLAYOUT_4444 , 12 , 2)
SDL_PIXELFORMAT_RGB555 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED16 , SDL_PACKEDORDER_XRGB , SDL_PACKEDLAYOUT_1555 , 15 , 2)
SDL_PIXELFORMAT_BGR555 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED16 , SDL_PACKEDORDER_XBGR , SDL_PACKEDLAYOUT_1555 , 15 , 2)
SDL_PIXELFORMAT_ARGB4444 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED16 , SDL_PACKEDORDER_ARGB , SDL_PACKEDLAYOUT_4444 , 16 , 2)
SDL_PIXELFORMAT_RGBA4444 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED16 , SDL_PACKEDORDER_RGBA , SDL_PACKEDLAYOUT_4444 , 16 , 2)
SDL_PIXELFORMAT_ABGR4444 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED16 , SDL_PACKEDORDER_ABGR , SDL_PACKEDLAYOUT_4444 , 16 , 2)
SDL_PIXELFORMAT_BGRA4444 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED16 , SDL_PACKEDORDER_BGRA , SDL_PACKEDLAYOUT_4444 , 16 , 2)
SDL_PIXELFORMAT_ARGB1555 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED16 , SDL_PACKEDORDER_ARGB , SDL_PACKEDLAYOUT_1555 , 16 , 2)
SDL_PIXELFORMAT_RGBA5551 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED16 , SDL_PACKEDORDER_RGBA , SDL_PACKEDLAYOUT_5551 , 16 , 2)
SDL_PIXELFORMAT_ABGR1555 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED16 , SDL_PACKEDORDER_ABGR , SDL_PACKEDLAYOUT_1555 , 16 , 2)
SDL_PIXELFORMAT_BGRA5551 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED16 , SDL_PACKEDORDER_BGRA , SDL_PACKEDLAYOUT_5551 , 16 , 2)
SDL_PIXELFORMAT_RGB565 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED16 , SDL_PACKEDORDER_XRGB , SDL_PACKEDLAYOUT_565 , 16 , 2)
SDL_PIXELFORMAT_BGR565 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED16 , SDL_PACKEDORDER_XBGR , SDL_PACKEDLAYOUT_565 , 16 , 2)
SDL_PIXELFORMAT_RGB24 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_ARRAYU8 , SDL_ARRAYORDER_RGB , 0 , 24 , 3)
SDL_PIXELFORMAT_BGR24 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_ARRAYU8 , SDL_ARRAYORDER_BGR , 0 , 24 , 3)
SDL_PIXELFORMAT_RGB888 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED32 , SDL_PACKEDORDER_XRGB , SDL_PACKEDLAYOUT_8888 , 24 , 4)
SDL_PIXELFORMAT_RGBX8888 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED32 , SDL_PACKEDORDER_RGBX , SDL_PACKEDLAYOUT_8888 , 24 , 4)
SDL_PIXELFORMAT_BGR888 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED32 , SDL_PACKEDORDER_XBGR , SDL_PACKEDLAYOUT_8888 , 24 , 4)
SDL_PIXELFORMAT_BGRX8888 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED32 , SDL_PACKEDORDER_BGRX , SDL_PACKEDLAYOUT_8888 , 24 , 4)
SDL_PIXELFORMAT_ARGB8888 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED32 , SDL_PACKEDORDER_ARGB , SDL_PACKEDLAYOUT_8888 , 32 , 4)
SDL_PIXELFORMAT_RGBA8888 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED32 , SDL_PACKEDORDER_RGBA , SDL_PACKEDLAYOUT_8888 , 32 , 4)
SDL_PIXELFORMAT_ABGR8888 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED32 , SDL_PACKEDORDER_ABGR , SDL_PACKEDLAYOUT_8888 , 32 , 4)
SDL_PIXELFORMAT_BGRA8888 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED32 , SDL_PACKEDORDER_BGRA , SDL_PACKEDLAYOUT_8888 , 32 , 4)
SDL_PIXELFORMAT_ARGB2101010 = SDL_DEFINE_PIXELFORMAT( SDL_PIXELTYPE_PACKED32 , SDL_PACKEDORDER_ARGB , SDL_PACKEDLAYOUT_2101010 , 32 , 4)
if SDL_BYTEORDER eq SDL_BIG_ENDIAN
SDL_PIXELFORMAT_RGBA32 = SDL_PIXELFORMAT_RGBA8888 
SDL_PIXELFORMAT_ARGB32 = SDL_PIXELFORMAT_ARGB8888 
SDL_PIXELFORMAT_BGRA32 = SDL_PIXELFORMAT_BGRA8888 
SDL_PIXELFORMAT_ABGR32 = SDL_PIXELFORMAT_ABGR8888 
else 
SDL_PIXELFORMAT_RGBA32 = SDL_PIXELFORMAT_ABGR8888 
SDL_PIXELFORMAT_ARGB32 = SDL_PIXELFORMAT_BGRA8888 
SDL_PIXELFORMAT_BGRA32 = SDL_PIXELFORMAT_ARGB8888 
SDL_PIXELFORMAT_ABGR32 = SDL_PIXELFORMAT_RGBA8888 
endif 
SDL_PIXELFORMAT_YV12 = SDL_DEFINE_PIXELFOURCC( 'Y' , 'V' , '1' , '2')
SDL_PIXELFORMAT_IYUV = SDL_DEFINE_PIXELFOURCC( 'I' , 'Y' , 'U' , 'V')
SDL_PIXELFORMAT_YUY2 = SDL_DEFINE_PIXELFOURCC( 'Y' , 'U' , 'Y' , '2')
SDL_PIXELFORMAT_UYVY = SDL_DEFINE_PIXELFOURCC( 'U' , 'Y' , 'V' , 'Y')
SDL_PIXELFORMAT_YVYU = SDL_DEFINE_PIXELFOURCC( 'Y' , 'V' , 'Y' , 'U')
SDL_PIXELFORMAT_NV12 = SDL_DEFINE_PIXELFOURCC( 'N' , 'V' , '1' , '2')
SDL_PIXELFORMAT_NV21 = SDL_DEFINE_PIXELFOURCC( 'N' , 'V' , '2' , '1')
SDL_PIXELFORMAT_EXTERNAL_OES = SDL_DEFINE_PIXELFOURCC( 'O' , 'E' , 'S' , ' ')

SDL_Color	struct 
r	Uint8	?
g	Uint8	?
b	Uint8	?
a	Uint8	?
SDL_Color	ends

SDL_Colour	EQU	<SDL_Color>
SDL_Palette	struct 
ncolors	DWORD	?
colors	DWORD	?
version	DWORD	?
refcount	DWORD	?
SDL_Palette	ends

SDL_PixelFormat	struct 
format	DWORD	?
palette	DWORD	?
BitsPerPixel	Uint8	?
BytesPerPixel	Uint8	?
padding	Uint8 2 dup (?)
Rmask	DWORD	?
Gmask	DWORD	?
Bmask	DWORD	?
Amask	DWORD	?
Rloss	Uint8	?
Gloss	Uint8	?
Bloss	Uint8	?
Aloss	Uint8	?
Rshift	Uint8	?
Gshift	Uint8	?
Bshift	Uint8	?
Ashift	Uint8	?
refcount	DWORD	?
next DWORD ?
SDL_PixelFormat	ends

SDL_GetPixelFormatName proto  :Uint32
SDL_PixelFormatEnumToMasks proto  :Uint32, :ptr DWORD, :ptr Uint32, :ptr Uint32, :ptr Uint32, :ptr Uint32
SDL_MasksToPixelFormatEnum proto  :DWORD, :Uint32, :Uint32, :Uint32, :Uint32
SDL_AllocFormat proto  :Uint32
SDL_FreeFormat proto  :ptr SDL_PixelFormat
SDL_AllocPalette proto  :DWORD
SDL_SetPixelFormatPalette proto  :ptr SDL_PixelFormat, :ptr SDL_Palette
SDL_SetPaletteColors proto  :ptr SDL_Palette, :ptr SDL_Color, :DWORD, :DWORD
SDL_FreePalette proto  :ptr SDL_Palette
SDL_MapRGB proto  :ptr SDL_PixelFormat, :Uint8, :Uint8, :Uint8
SDL_MapRGBA proto  :ptr SDL_PixelFormat, :Uint8, :Uint8, :Uint8, :Uint8
SDL_GetRGB proto  :Uint32, :ptr SDL_PixelFormat, :ptr Uint8, :ptr Uint8, :ptr Uint8
SDL_GetRGBA proto  :Uint32, :ptr SDL_PixelFormat, :ptr Uint8, :ptr Uint8, :ptr Uint8, :ptr Uint8
SDL_CalculateGammaRamp proto  :REAL4, :ptr Uint16
endif 

;--- errors: 0
;--- end of file ---
